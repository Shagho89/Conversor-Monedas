import java.util.Scanner;

public class Principal {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        Solicitudes solicitud = new Solicitudes();
        ConvertirArchivo convertir = new ConvertirArchivo();
        String monedaBase = "";
        String monedaConvertida = "";
        double monto = 0.0;

        while (true) {
            System.out.println("Menú:");
            System.out.println("1. Poner la 1era moneda a convertir");
            System.out.println("2. Poner la 2da moneda a convertir");
            System.out.println("3. Poner el valor a convertir");
            System.out.println("4. Salir del menú");
            System.out.print("Seleccione una opción: ");
            int opcion = scanner.nextInt();

            switch (opcion) {
                case 1:
                    System.out.print("Ingrese la moneda base (por ejemplo, USD): ");
                    monedaBase = scanner.next().toUpperCase();
                    break;
                case 2:
                    System.out.print("Ingrese la moneda a la que desea convertir (por ejemplo, EUR): ");
                    monedaConvertida = scanner.next().toUpperCase();
                    break;
                case 3:
                    System.out.print("Ingrese la cantidad a convertir: ");
                    monto = scanner.nextDouble();

                    if (monedaBase.isEmpty() || monedaConvertida.isEmpty()) {
                        System.out.println("Por favor, establezca primero las monedas.");
                    } else {
                        try {
                            Datos exchangeRate = solicitud.getExchangeRate(monedaBase, monedaConvertida);
                            double montoConvertido = monto * exchangeRate.rate();
                            System.out.printf("%.2f %s es igual a %.2f %s%n", monto, monedaBase, montoConvertido, monedaConvertida);
                            convertir.agregarmoneda(monedaBase, monedaConvertida, monto, montoConvertido);
                        } catch (Exception e) {
                            System.out.println("Error al obtener la tasa de cambio: " + e.getMessage());
                        }
                    }
                    break;
                case 4:
                    System.out.println("Saliendo del menú...");
                    scanner.close();
                    return;
                default:
                    System.out.println("Opción no válida. Por favor, intente de nuevo.");
            }
        }
    }
}

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

    public class ConvertirArchivo {
        private static final String archivo = "Monedas.json";
        private final List<Conversiones> convertir = new ArrayList<>();
        private final Gson gson = new GsonBuilder().setPrettyPrinting().create();

        public void agregarmoneda(String monedaBase, String monedaConvertida, double monto, double montoConvertido) {
            convertir.add(new Conversiones(monedaBase, monedaConvertida, monto, montoConvertido));
            writeToFile();
        }

        private void writeToFile() {
            try (FileWriter writer = new FileWriter(archivo)) {
                gson.toJson(convertir, writer);
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        private static class Conversiones {
            private final String monedaBase;
            private final String monedaConvertida;
            private final double monto;
            private final double montoConvertido;

            public Conversiones(String monedaBase, String monedaConvertida, double monto, double montoConvertido) {
                this.monedaBase = monedaBase;
                this.monedaConvertida = monedaConvertida;
                this.monto = monto;
                this.montoConvertido = montoConvertido;
            }
        }
    }

public record Datos(String monedaBase, String monedaConvertida, double rate) {}

import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import com.google.gson.Gson;

public class Solicitudes {
    private static final String API_URL = "https://api.exchangerate-api.com/v4/latest/";
    private final Gson gson = new Gson();

    public Datos getExchangeRate(String monedaBase, String monedaConvertida) throws Exception {
        HttpClient client = HttpClient.newHttpClient();
        HttpRequest request = HttpRequest.newBuilder()
                .uri(new URI(API_URL + monedaBase))
                .build();

        HttpResponse<String> response = client.send(request, HttpResponse.BodyHandlers.ofString());

        if (response.statusCode() == 200) {
            RateResponse rateResponse = gson.fromJson(response.body(), RateResponse.class);
            double rate = rateResponse.rates().get(monedaConvertida);
            return new Datos(monedaBase, monedaConvertida, rate);
        } else {
            throw new Exception("Error en la respuesta de la API");
        }
    }
}

class RateResponse {
    private String base;
    private java.util.Map<String, Double> rates;

    public String base() {
        return base;
    }

    public java.util.Map<String, Double> rates() {
        return rates;
    }
